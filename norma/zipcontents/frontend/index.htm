
<body>
<h2>LLRP Configuration</h2>
<div id="pongDiv"></div>
<ul class="nav nav-tabs">
    <li class="active"><a data-toggle="tab" href="#home" onclick="GetStatus();">Status</a></li>
    <li><a data-toggle="tab" href="#config" onclick="GetDevices();">Config</a></li>
	<li><a data-toggle="tab" href="#log" onclick="GetLog();">Log</a></li>
  </ul>
  <div id="loaderDiv"></br></div>
  <div class="tab-content">
    <div id="home" class="tab-pane fade in active">
      <h3>Status</h3>
      <div id="statusDiv"></div>
    </div>
    <div id="config" class="tab-pane fade">
      <h3>Config</h3>	
	  <table class="table table-hover table-expandable table-striped" id="devList">
			<thead>
				<tr>
					<th>Reader address</th>
					<th>Client port</th>
					<th>Reader port</th>
					<th>Active</th>
					<th>Use TLS</th>
					<th>Remove</th>
					<th></th>
				</tr>
			</thead>
			<tbody id="devListBody"></tbody>
		</table>
      <div id="devDiv"></div>
	  <div id="resDiv"></div>
	  <input type="button" class="btn btn-primary" onclick="SetDevices()" value="Save"/>
	<input type="button" class="btn btn-primary" onclick="AddDevice()" value="Add new reader"/>
	<input type="button" class="btn btn-primary" onclick="GetDevices()" value="Reload"/>
    </div>
    <div id="log" class="tab-pane fade">
      <h3>Log</h3>
	  <textarea id="normalogDiv" rows="20" style="width:99%" spellcheck="false">
</textarea>
      <p></p>
    </div>
    <div id="menu3" class="tab-pane fade">
      <h3>Menu 3</h3>
      <p></p>
    </div>
  </div>
  
<script src="../../js/helpers.js"></script>
<script type="text/javascript">

var devCount = 0;

function SetDevices()
{
	$("#resDiv").empty();
	//var set = GetSettingElements("devDiv");
	var Devices = [];
	var reader = {Active: false, ReaderAddress: "",  ClientPort: -1, UseTLS: false, ReaderPort: -1};
	var readerEnum = -1;
	//data[x].Reader.ReaderAddress
	for(var i = 0; i < devCount; i++)
	{
		
		if(document.getElementById('readerAddress_' + i) == null || document.getElementById('readerAddress_' + i) == undefined)
			continue;
	
		reader.ReaderAddress = document.getElementById('readerAddress_' + i).value;
		reader.Active = document.getElementById('active_' + i).checked;
		reader.UseTLS = document.getElementById('useTls_' + i).checked;
		reader.ClientPort = document.getElementById('clientPort_' + i).value;
		if(isNaN(reader.ClientPort) || parseInt(reader.ClientPort) <= 0) {
		$("#resDiv").append("Client port is not valid numeric value");
			return;
		}
					
		reader.ReaderPort = document.getElementById('readerPort_' + i).value;
		if(isNaN(reader.ReaderPort)) {
			delete reader.ReaderPort;
		}
		else if(parseInt(reader.ReaderPort) <= 0)
		{
			delete reader.ReaderPort;
		}
		
		Devices.push({Reader: reader});
		reader = {Active: false, ReaderAddress: "",  ClientPort: -1, UseTLS: false, ReaderPort: -1};
	}
	var fullurl = 'https://' + location.host + '/app/backend/norma/SetDevices';
	var jsoni = JSON.stringify(Devices);
	$.ajax({
            url: fullurl,
            type: 'POST',
            cache: false,
			data: jsoni,
			contentType: "application/json",
            processData: false, // Don't process the files
            success: function (data) {
				
                if(data === false) 
				{
					$("#resDiv").append("Saving settings failed");
				}
				else
				{
					$("#resDiv").append("Settings saved");
				}
            },
            error: function (data) {
				$("#resDiv").empty();
				$("#resDiv").append("Saving settings failed");             
            },
        });
}

function RemoveReader(el)
{
	$(el).parents("tr").remove()       	
}

function AddDevice()
{
	var tr = document.createElement('tr');
	var addr = document.createElement('input');
	addr.type = "text";
	addr.id = "readerAddress_" + devCount;
	addr.value = "";
	AddElColumn(tr, addr);
	
	addr = document.createElement('input');
	addr.type = "text";
	addr.id = "clientPort_" + devCount;
	addr.value = "";
	AddElColumn(tr, addr);
	
	addr = document.createElement('input');
	addr.type = "text";
	addr.id = "readerPort_" + devCount;
	addr.value = "";
	AddElColumn(tr, addr);
	
	addr = document.createElement('input');
	addr.type = "checkbox";
	addr.id = "active_" + devCount;
	addr.checked = false;
	AddElColumn(tr, addr);
	
	addr = document.createElement('input');
	addr.type = "checkbox";
	addr.id = "useTls_" + devCount;
	addr.checked = false;
	AddElColumn(tr, addr);
	
	AddHtmlColumn(tr, '<input type="button" class="btn btn-danger" onclick="RemoveReader(this)" value="Remove"></input>');
	$('#devListBody').append(tr);
	
	devCount++;
}

function GetStatus()
{
	$("#loaderDiv").html("<img src='"+location.host+"/../../../img/ajax-loader.gif'/>");
	$("#statusDiv").empty();
	var fullurl = 'https://' + location.host + '/app/backend/norma/GetDeviceStatusAll';
	$.ajax({
		url: fullurl,
		type: "GET",
		cache: false,
		processData: false, // Don't process the files
		success: function (data) 
		{
			if(data != undefined && data != null)
			{
				$("#statusDiv").append("Last update: " + data.LastUpdate + "</br></br>");
				for(var i=0;i<data.Instances.ReaderStatus.length;i++)
				{
					var readerConn = data.Instances.ReaderStatus[i].Status.ReaderConnection;
					var clientConn = data.Instances.ReaderStatus[i].Status.ClientConnection;
					var readerErr = data.Instances.ReaderStatus[i].Status.ReaderLastError;
					var llrpErr = data.Instances.ReaderStatus[i].Status.LastLLRPError;
					if(readerConn == "Connected")
						readerConn = readerConn.fontcolor("#00CC00");
					else
						readerConn = readerConn.fontcolor("#CCCC00");
					
					if(clientConn.startsWith("Client "))
						clientConn = clientConn.fontcolor("#00CC00");
					else
						clientConn = clientConn.fontcolor("#CCCC00");
						
					if(readerErr != "No errors")
						readerErr = readerErr.fontcolor("#CC0000");

					if(llrpErr != "No errors")
						llrpErr = llrpErr.fontcolor("#CC0000");
						
					$("#statusDiv").append("<b>Instance name: " + data.Instances.ReaderStatus[i].InstanceName + "</b></br>");
					$("#statusDiv").append("Reader active: " + data.Instances.ReaderStatus[i].Status.Active + "</br>");
					$("#statusDiv").append("Client connection status: " + clientConn + "</br>");
					$("#statusDiv").append("Reader connection status: " + readerConn + "</br>");
					$("#statusDiv").append("Last reader error: " + readerErr + "</br>");
					$("#statusDiv").append("Last LLRP error: " + llrpErr + "</br></br></br>");
				}
			}
			$("#loaderDiv").html("</br>");
		},
		error: function (data) 
		{
			$("#loaderDiv").html("</br>");
			$("#statusDiv").append("Error getting data "+data+"</br>");
		}
	});
}


function CreateTextColumn(text){
	var td = document.createElement('td');
	td.appendChild(document.createTextNode(text));
	return td;
}

function CreateTextColumn(text,span){
	var td = document.createElement('td');
	td.appendChild(document.createTextNode(text));
	if(span > 0)
		td.colSpan = span;
	return td;
}

function AddHeaderColumn(row, text){
	var hdrTd = document.createElement('th'); 
	hdrTd.style="font-weight:bold"; 
	hdrTd.appendChild(document.createTextNode(text));
	row.appendChild(hdrTd);
}

function AddTextColumn(row, text){
	var td = document.createElement('td');
	td.appendChild(document.createTextNode(text));
	row.appendChild(td);
}

function AddElColumn(row, el){
	var td = document.createElement('td');
	td.appendChild(el);
	row.appendChild(td);
}

function AddHtmlColumn(row, html){
	var td = document.createElement('td');
	td.innerHTML = html;
	row.appendChild(td);
}


function GetDevices()
{
	$("#resDiv").empty();
	$("#loaderDiv").html("<img src='"+location.host+"/../../../img/ajax-loader.gif'/>");
	$("#devDiv").empty();
	$("#devListBody").empty();
	devCount = 0;
	var tbody = document.createElement('tbody');
	var fullurl = 'https://' + location.host + '/app/backend/norma/GetDevices';
	$.ajax({
		url: fullurl,
		type: "GET",
		cache: false,
		processData: false, // Don't process the files
		success: function (data) {
			$("#loaderDiv").html("</br>");
		
			for(var x=0;x<data.length;x++)
			{	
				//$("#devDiv").append("<div id='readerDiv"+x+"'>");
				//var divi = "readerDiv"+x;

				var tr = document.createElement('tr');
				var addr = document.createElement('input');
				addr.type = "text";
				addr.id = "readerAddress_" + x;
				addr.value = data[x].Reader.ReaderAddress;
				AddElColumn(tr, addr);
				
				addr = document.createElement('input');
				addr.type = "text";
				addr.id = "clientPort_" + x;
				addr.value = data[x].Reader.ClientPort;
				AddElColumn(tr, addr);
				
				addr = document.createElement('input');
				addr.type = "text";
				addr.id = "readerPort_" + x;
				addr.value = data[x].Reader.ReaderPort;
				AddElColumn(tr, addr);
				
				addr = document.createElement('input');
				addr.type = "checkbox";
				addr.id = "active_" + x;
				addr.checked = data[x].Reader.Active;
				AddElColumn(tr, addr);
				
				addr = document.createElement('input');
				addr.type = "checkbox";
				addr.id = "useTls_" + x;
				addr.checked = data[x].Reader.UseTLS;
				AddElColumn(tr, addr);

				AddHtmlColumn(tr, '<input type="button" class="btn btn-danger" onclick="RemoveReader(this)" value="Remove"></input>');
				$('#devListBody').append(tr);
		
				devCount++;
				
			}	
			
		},
		error: function (data) {
			$("#loaderDiv").html("</br>");
			$("#devDiv").append("Error getting data "+data+"</br>");
		}
	});
}

function GetLog()
{
	$("#normalogDiv").val('');
	$("#loaderDiv").html("<img src='"+location.host+"/../../../img/ajax-loader.gif'/>");
	var fullurl = 'https://' + location.host + '/app/backend/norma/GetLog';
	$.ajax({
		url: fullurl,
		type: "GET",
		cache: false,
		processData: false, // Don't process the files
		success: function (data) {
			$("#loaderDiv").html("</br>");
			$("#normalogDiv").val(data);
		},
		error: function (data) {
			$("#loaderDiv").html("</br>");
			$("#normalogDiv").val(data);
		}
	});
}

GetStatus();
GetDevices();
GetLog();
</script>

</body>


