
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>Mosquitto Websockets</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="/app/frontend/javasample/mqttws31.js" type="text/javascript"></script>
    <script src="/app/frontend/javasample/jquery.min.js" type="text/javascript"></script>
    <script src="/app/frontend/javasample/config.js" type="text/javascript"></script>

    <script type="text/javascript">
    var mqtt;
    var reconnectTimeout = 2000;

    function MQTTconnect() {
	if (typeof path == "undefined") {
		path = '/';
	}
	mqtt = new Paho.MQTT.Client(
			host,
			port,
			path,
			"web_" + parseInt(Math.random() * 100, 10)
	);
        var options = {
            timeout: 3,
            useSSL: useTLS,
            cleanSession: cleansession,
            onSuccess: onConnect,
            onFailure: function (message) {
                $('#events').append("Connection failed: " + message.errorMessage + "Retrying");
                setTimeout(MQTTconnect, reconnectTimeout);
            }
        };

        mqtt.onConnectionLost = onConnectionLost;
        mqtt.onMessageArrived = onMessageArrived;

        if (username != null) {
            options.userName = username;
            options.password = password;
        }
        console.log("Host="+ host + ", port=" + port + ", path=" + path + " TLS = " + useTLS + " username=" + username + " password=" + password);
        mqtt.connect(options);
    }

    function onConnect() {
        $('#events').append('Connected to ' + host + ':' + port + path);
        // Connection succeeded; subscribe to our topic
        mqtt.subscribe("javasample/events", {qos: 0});
		mqtt.subscribe("javasample/tags", {qos: 0});
        $('#topic').val("javasample/events & javasample/tags");
    }

    function onConnectionLost(response) {
        setTimeout(MQTTconnect, reconnectTimeout);
        $('#events').append("connection lost: " + responseObject.errorMessage + ". Reconnecting");

    };

    function onMessageArrived(message) {

        var topic = message.destinationName;
        var payload = message.payloadString;
		if(topic == "javasample/tags")
			$('#tags').append('<li>' + payload + '</li>');
		else
			$('#events').append('<li>' + topic + ' = ' + payload + '</li>');
    };

   	
    MQTTconnect();
    

	function runSample()
	{
		var paramData = { "name": "javasample"}; 
		var fullurl = 'https://' + location.host + '/Core/Application/Start';
		$.ajax({
			url: fullurl,
			type: "POST",
			cache: false,
			data: JSON.stringify(paramData),
			dataType: "json",
			contentType: "application/json",
			processData: false, // Don't process the files
			success: function (data) {
				$('#events').append('<li>Application signaled to start</li>');
			},
			error: function (data) {
				$('#events').append('<li>backend service connection error ' + data + '</li>');
			}
		});
	}
    </script>
  </head>
  <body>
    <h1>Javasample manager</h1>
	This example enables you to execute javasample program which will return the result to the MQTT subscription "javasample/inventory". Note that you'll need to enable Mosquitto(MQTT) from "System configuration=>System Services".
	The default MQTT port is set to 1883 and for websockets protocol the port is 1884. Check the source codes of this particular page and the javasample to see more details.
    <div>
        <div>Subscribed to <input type='text' id='topic' disabled /></br>
		<input type="button" class="btn btn-primary" onclick="runSample()" value="Run"/>
		
		<table style="width:100%">
		<tr><td width="20%"><b>Tags</b></td><td><b>Events</b></td></tr>
		<tr><td>
		<ul id='tags' style="font-family: 'Courier New', Courier, monospace;"></ul>
		</td><td>
        <ul id='events' style="font-family: 'Courier New', Courier, monospace;"></ul>
		</td></tr></table>
        
    </div>
  </body>
</html>
